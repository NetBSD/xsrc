/*
 * AUTOGENERATED FILE -- DO NOT EDIT
 * This file is generated automatically by /encrypt/home/nia/git/ctwm-4.1.0/tools/mk_function_bits.sh
 * from '/encrypt/home/nia/git/ctwm-4.1.0/functions_defs.list'
 * during the build process.
 */

#ifndef _CTWM_FUNCTIONS_PARSE_TABLE_H
#define _CTWM_FUNCTIONS_PARSE_TABLE_H

/* Parser table for functions */
static const TwmKeyword funckeytable[] = {
	{ "f.addtoworkspace",      FSKEYWORD, F_ADDTOWORKSPACE },
#ifdef CAPTIVE
	{ "f.adoptwindow",          FKEYWORD, F_ADOPTWINDOW },
#endif
	{ "f.altcontext",           FKEYWORD, F_ALTCONTEXT },
	{ "f.altkeymap",           FSKEYWORD, F_ALTKEYMAP },
	{ "f.autolower",            FKEYWORD, F_AUTOLOWER },
	{ "f.autoraise",            FKEYWORD, F_AUTORAISE },
	{ "f.backiconmgr",          FKEYWORD, F_BACKICONMGR },
	{ "f.backmapiconmgr",       FKEYWORD, F_BACKMAPICONMGR },
	{ "f.beep",                 FKEYWORD, F_BEEP },
	{ "f.bottomzoom",           FKEYWORD, F_BOTTOMZOOM },
	{ "f.changepriority",      FSKEYWORD, F_CHANGEPRIORITY },
	{ "f.changesize",          FSKEYWORD, F_CHANGESIZE },
	{ "f.circledown",           FKEYWORD, F_CIRCLEDOWN },
	{ "f.circleup",             FKEYWORD, F_CIRCLEUP },
	{ "f.colormap",            FSKEYWORD, F_COLORMAP },
	{ "f.deiconify",            FKEYWORD, F_DEICONIFY },
	{ "f.delete",               FKEYWORD, F_DELETE },
	{ "f.deleteordestroy",      FKEYWORD, F_DELETEORDESTROY },
	{ "f.deltastop",            FKEYWORD, F_DELTASTOP },
	{ "f.destroy",              FKEYWORD, F_DESTROY },
	{ "f.downiconmgr",          FKEYWORD, F_DOWNICONMGR },
	{ "f.downworkspace",        FKEYWORD, F_DOWNWORKSPACE },
	{ "f.exec",                FSKEYWORD, F_EXEC },
	{ "f.fill",                FSKEYWORD, F_FILL },
#ifdef WINBOX
	{ "f.fittocontent",         FKEYWORD, F_FITTOCONTENT },
#endif
	{ "f.focus",                FKEYWORD, F_FOCUS },
	{ "f.forcemove",            FKEYWORD, F_FORCEMOVE },
	{ "f.forwiconmgr",          FKEYWORD, F_FORWICONMGR },
	{ "f.forwmapiconmgr",       FKEYWORD, F_FORWMAPICONMGR },
	{ "f.fullscreenzoom",       FKEYWORD, F_FULLSCREENZOOM },
	{ "f.fullzoom",             FKEYWORD, F_FULLZOOM },
	{ "f.function",            FSKEYWORD, F_FUNCTION },
	{ "f.gotoworkspace",       FSKEYWORD, F_GOTOWORKSPACE },
	{ "f.hbzoom",               FKEYWORD, F_BOTTOMZOOM }, // -> f.bottomzoom
	{ "f.hideiconmgr",          FKEYWORD, F_HIDEICONMGR },
	{ "f.hideworkspacemgr",     FKEYWORD, F_HIDEWORKSPACEMGR },
	{ "f.horizoom",             FKEYWORD, F_HORIZOOM },
	{ "f.htzoom",               FKEYWORD, F_TOPZOOM }, // -> f.topzoom
#ifdef CAPTIVE
	{ "f.hypermove",            FKEYWORD, F_HYPERMOVE },
#endif
	{ "f.hzoom",                FKEYWORD, F_HORIZOOM }, // -> f.horizoom
	{ "f.iconify",              FKEYWORD, F_ICONIFY },
	{ "f.identify",             FKEYWORD, F_IDENTIFY },
	{ "f.initsize",             FKEYWORD, F_INITSIZE },
	{ "f.jumpdown",            FSKEYWORD, F_JUMPDOWN },
	{ "f.jumpleft",            FSKEYWORD, F_JUMPLEFT },
	{ "f.jumpright",           FSKEYWORD, F_JUMPRIGHT },
	{ "f.jumpup",              FSKEYWORD, F_JUMPUP },
	{ "f.lefticonmgr",          FKEYWORD, F_LEFTICONMGR },
	{ "f.leftworkspace",        FKEYWORD, F_LEFTWORKSPACE },
	{ "f.leftzoom",             FKEYWORD, F_LEFTZOOM },
	{ "f.lower",                FKEYWORD, F_LOWER },
	{ "f.menu",                FSKEYWORD, F_MENU },
	{ "f.move",                 FKEYWORD, F_MOVE },
	{ "f.movepack",             FKEYWORD, F_MOVEPACK },
	{ "f.movepush",             FKEYWORD, F_MOVEPUSH },
	{ "f.moveresize",          FSKEYWORD, F_MOVERESIZE },
	{ "f.movetitlebar",         FKEYWORD, F_MOVETITLEBAR },
	{ "f.movetonextworkspace",  FKEYWORD, F_MOVETONEXTWORKSPACE },
	{ "f.movetonextworkspaceandfollow",  FKEYWORD, F_MOVETONEXTWORKSPACEANDFOLLOW },
	{ "f.movetoprevworkspace",  FKEYWORD, F_MOVETOPREVWORKSPACE },
	{ "f.movetoprevworkspaceandfollow",  FKEYWORD, F_MOVETOPREVWORKSPACEANDFOLLOW },
	{ "f.nexticonmgr",          FKEYWORD, F_NEXTICONMGR },
	{ "f.nextworkspace",        FKEYWORD, F_NEXTWORKSPACE },
	{ "f.nop",                  FKEYWORD, F_NOP },
	{ "f.occupy",               FKEYWORD, F_OCCUPY },
	{ "f.occupyall",            FKEYWORD, F_OCCUPYALL },
	{ "f.pack",                FSKEYWORD, F_PACK },
	{ "f.pin",                  FKEYWORD, F_PIN },
	{ "f.previconmgr",          FKEYWORD, F_PREVICONMGR },
	{ "f.prevworkspace",        FKEYWORD, F_PREVWORKSPACE },
	{ "f.priorityswitching",    FKEYWORD, F_PRIORITYSWITCHING },
	{ "f.quit",                 FKEYWORD, F_QUIT },
	{ "f.raise",                FKEYWORD, F_RAISE },
	{ "f.raiseicons",           FKEYWORD, F_RAISEICONS },
	{ "f.raiselower",           FKEYWORD, F_RAISELOWER },
	{ "f.raiseorsqueeze",       FKEYWORD, F_RAISEORSQUEEZE },
	{ "f.refresh",              FKEYWORD, F_REFRESH },
	{ "f.removefromworkspace", FSKEYWORD, F_REMOVEFROMWORKSPACE },
#ifdef SOUNDS
	{ "f.rereadsounds",         FKEYWORD, F_REREADSOUNDS },
#endif
	{ "f.rescuewindows",        FKEYWORD, F_RESCUEWINDOWS },
	{ "f.resize",               FKEYWORD, F_RESIZE },
	{ "f.restart",              FKEYWORD, F_RESTART },
	{ "f.restoregeometry",      FKEYWORD, F_RESTOREGEOMETRY },
	{ "f.righticonmgr",         FKEYWORD, F_RIGHTICONMGR },
	{ "f.rightworkspace",       FKEYWORD, F_RIGHTWORKSPACE },
	{ "f.rightzoom",            FKEYWORD, F_RIGHTZOOM },
	{ "f.ring",                 FKEYWORD, F_RING },
	{ "f.savegeometry",         FKEYWORD, F_SAVEGEOMETRY },
	{ "f.saveyourself",         FKEYWORD, F_SAVEYOURSELF },
	{ "f.separator",            FKEYWORD, F_SEPARATOR },
	{ "f.setbuttonsstate",      FKEYWORD, F_SETBUTTONSSTATE },
	{ "f.setmapstate",          FKEYWORD, F_SETMAPSTATE },
	{ "f.setpriority",         FSKEYWORD, F_SETPRIORITY },
	{ "f.showbackground",       FKEYWORD, F_SHOWBACKGROUND },
	{ "f.showiconmgr",          FKEYWORD, F_SHOWICONMGR },
	{ "f.showworkspacemgr",     FKEYWORD, F_SHOWWORKSPACEMGR },
	{ "f.slowdownanimation",    FKEYWORD, F_SLOWDOWNANIMATION },
	{ "f.sorticonmgr",          FKEYWORD, F_SORTICONMGR },
	{ "f.speedupanimation",     FKEYWORD, F_SPEEDUPANIMATION },
	{ "f.squeeze",              FKEYWORD, F_SQUEEZE },
	{ "f.startanimation",       FKEYWORD, F_STARTANIMATION },
	{ "f.stopanimation",        FKEYWORD, F_STOPANIMATION },
	{ "f.switchpriority",       FKEYWORD, F_SWITCHPRIORITY },
	{ "f.tinylower",            FKEYWORD, F_TINYLOWER },
	{ "f.tinyraise",            FKEYWORD, F_TINYRAISE },
	{ "f.title",                FKEYWORD, F_TITLE },
	{ "f.toggleoccupation",    FSKEYWORD, F_TOGGLEOCCUPATION },
#ifdef SOUNDS
	{ "f.togglesound",          FKEYWORD, F_TOGGLESOUND },
#endif
	{ "f.togglestate",          FKEYWORD, F_TOGGLESTATE },
	{ "f.toggleworkspacemgr",   FKEYWORD, F_TOGGLEWORKSPACEMGR },
	{ "f.topzoom",              FKEYWORD, F_TOPZOOM },
	{ "f.trace",               FSKEYWORD, F_TRACE },
	{ "f.twmrc",                FKEYWORD, F_RESTART }, // -> f.restart
	{ "f.unfocus",              FKEYWORD, F_UNFOCUS },
	{ "f.unsqueeze",            FKEYWORD, F_UNSQUEEZE },
	{ "f.upiconmgr",            FKEYWORD, F_UPICONMGR },
	{ "f.upworkspace",          FKEYWORD, F_UPWORKSPACE },
	{ "f.vanish",               FKEYWORD, F_VANISH },
	{ "f.version",              FKEYWORD, F_VERSION },
	{ "f.vlzoom",               FKEYWORD, F_LEFTZOOM }, // -> f.leftzoom
	{ "f.vrzoom",               FKEYWORD, F_RIGHTZOOM }, // -> f.rightzoom
	{ "f.warphere",            FSKEYWORD, F_WARPHERE },
	{ "f.warpring",            FSKEYWORD, F_WARPRING },
	{ "f.warpto",              FSKEYWORD, F_WARPTO },
	{ "f.warptoiconmgr",       FSKEYWORD, F_WARPTOICONMGR },
	{ "f.warptoscreen",        FSKEYWORD, F_WARPTOSCREEN },
	{ "f.winrefresh",           FKEYWORD, F_WINREFRESH },
	{ "f.xbottomzoom",          FKEYWORD, F_XBOTTOMZOOM },
	{ "f.xfullscreenzoom",      FKEYWORD, F_XFULLSCREENZOOM },
	{ "f.xfullzoom",            FKEYWORD, F_XFULLZOOM },
	{ "f.xhorizoom",            FKEYWORD, F_XHORIZOOM },
	{ "f.xleftzoom",            FKEYWORD, F_XLEFTZOOM },
	{ "f.xrightzoom",           FKEYWORD, F_XRIGHTZOOM },
	{ "f.xtopzoom",             FKEYWORD, F_XTOPZOOM },
	{ "f.xzoom",                FKEYWORD, F_XZOOM },
	{ "f.zoom",                 FKEYWORD, F_ZOOM },
};
	
static const size_t numfunckeywords = (sizeof(funckeytable) / sizeof(funckeytable[0]));

#endif // _CTWM_FUNCTIONS_PARSE_TABLE_H
