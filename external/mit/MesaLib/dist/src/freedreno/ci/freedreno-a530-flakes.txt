# Note: flakes lists for CI are just a list of lines that, when
# non-zero-length and not starting with '#', will regex match to
# delete lines from the test list.  Be careful.

# unstable results (probably related to the iommu faults).
dEQP-GLES3.functional.fbo.invalidate.whole.unbind_blit_msaa_stencil
dEQP-GLES3.functional.texture.filtering.3d.*
dEQP-GLES3.functional.texture.vertex.3d.filtering.*
dEQP-GLES31.functional.ubo.2_level_struct_array.single_buffer.packed_instance_array_fragment

# unstable results once we enabled SMP -- some state not being reset reliably?
dEQP-GLES3.functional.transform_feedback.*

dEQP-GLES3.functional.fragment_ops.interaction.basic_shader.70

# First appeared 2021-06-11 on an unrelated MR.
dEQP-GLES31.functional.image_load_store.3d.load_store.*_single_layer

# These are in the xfails list (they usually do), but the random
# behavior occasionally results in UnexpectedPass results.
dEQP-GLES31.functional.separate_shader.random.99
dEQP-GLES31.functional.separate_shader.random.69
dEQP-GLES31.functional.separate_shader.random.119

# Usually passes
dEQP-GLES31.functional.separate_shader.random.13
dEQP-GLES31.functional.separate_shader.interface.same_name_vertex_centroid_fragment_centroid

# Flaky since running more of GLES31
dEQP-GLES31.functional.texture.border_clamp.*
KHR-GLES31.core.texture_border_clamp.*

# Occasionally passes
KHR-GLES31.core.arrays_of_arrays.InteractionFunctionCalls1
KHR-GLES31.core.arrays_of_arrays.InteractionFunctionCalls2

# Occasionally passes
KHR-GLES31.core.layout_binding.buffer_layout_binding_atomicAdd_ComputeShader
KHR-GLES31.core.layout_binding.buffer_layout_binding_atomicAdd_FragmentShader

# " Counter value is 1024 should be 896."
# 1. Create atomic counter buffers and init them with start values.
# 2. Increment (decrement) buffer values in the shader.
# 3. Map buffers with MapBufferRange command. Increment (decrement) buffer values manually.
# 4. Unmap buffers with UnmapBuffer command.
# 5. Again increment (decrement) buffer values in the shader.
# Verify that this scenario works as expected and final values in the buffer objects are correct.
KHR-GLES31.core.shader_atomic_counters.advanced-usage-draw-update-draw

KHR-GLES31.core.shader_image_load_store.basic-allTargets-atomicCS
KHR-GLES31.core.shader_image_load_store.basic-glsl-misc-cs
KHR-GLES31.core.shader_storage_buffer_object.advanced-switchBuffers-cs
KHR-GLES31.core.shader_storage_buffer_object.advanced-switchPrograms-cs
KHR-GLES31.core.shader_storage_buffer_object.basic-syntax-cs

# Flaky since around Feb 26, first appearing on a seemingly-unrelated CI change
# (ci-fd-fastboot-nfs)
dEQP-GLES31.functional.synchronization.inter_call.without_memory_barrier.*

dEQP-GLES31.functional.texture.gather.basic.2d_array.rgba8.filter_mode.min_nearest_mipmap_nearest_mag_linear

glx@glx-swap-event_interval
glx@glx_arb_sync_control@swapbuffersmsc-divisor-zero
glx@glx_arb_sync_control@waitformsc
glx@glx-copy-sub-buffer.*
glx@glx-multithread-texture
glx@glx-swap-event_async
shaders@glsl-uniform-interstage-limits@subdivide 5
spec@!opengl 1.0@gl-1.0-blend-func
spec@!opengl_1.1@texsubimage
spec@!opengl 1.1@user-clip
spec@arb_framebuffer_object@fbo-drawbuffers-none glblendfunci
spec@arb_pixel_buffer_object@texsubimage pbo
spec@arb_vertex_type_2_10_10_10_rev@attribs
spec@ext_packed_depth_stencil@fbo-depthstencil-gl_depth24_stencil8-drawpixels-24_8
spec@arb_texture_cube_map_array@texsubimage cube_map_array

# Flakes since around when the go-fast branch landed
spec@arb_copy_buffer@copy_buffer_coherency
.*tex-miplevel-selection.*
.*glsl-1.30@execution@texelfetch.*

# Flakes since introduction of piglit testing, possibly increased in frequency
# around Apr 16 or more likely Apr 23
spec@arb_texture_gather@texturegather.*

# Flakes since around Apr 30th on a clearly innocent MR.
.*texwrap.formats.*bordercolor

# First flake on Apr 29th on a clearly innocent MR
spec@arb_direct_state_access@dsa-textures
spec@arb_depth_buffer_float@depthstencil-render-miplevels_292_ds=z32f_s8

# First flaked on May 3 on a clearly innocent MR.
spec@arb_draw_instanced@arb_draw_instanced-drawarrays

# Intermittent crashes.  First flaked on May 11th in the piglit 3351e8952
# uprev, so presumably it regressed some time earlier and then showed up in the
# piglit reshuffle.
spec@arb_copy_buffer@intra-buffer-copy
spec@arb_copy_buffer@dlist

# Intermittent failure, mostly passes but sometimes fails. Was noticed on May 26th.
spec@ext_image_dma_buf_import@ext_image_dma_buf_import-sample_yvu420

# Crashes, possibly after the final piglit report caught by new piglit runner.
spec@ext_transform_feedback@api-errors.*

spec@!opengl 2.0@gl-2.0-two-sided-stencil
